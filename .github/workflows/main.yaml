name: CICD-PIPELINE

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  # SonarCloud Scan (commented, left unchanged as per your requirement)
  # SonarCloudSCan:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #           fetch-depth: 0
  #     - name: SonarCloud Scan
  #       uses: sonarsource/sonarcloud-github-action@master
  #       env:
  #           GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
  #           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #       with:
  #         args: >
  #           -Dsonar.organization=sk9212k
  #           -Dsonar.projectKey=ZBConverter
  #           -Dsonar.python.coverage.reportPaths=coverage.xml

  # 1. Node.js (React Frontend)
  build-test-frontend:
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v3

      - name: Set up Node.js for zedi-frontend
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Build and Test zedi-frontend
        run: |
          cd "ZEDI middleware/zedi-frontend"
          npm install
          npm run build

  # 2. .NET (Backend)
  build-test-backend:
    runs-on: ubuntu-latest
    needs: build-test-frontend
    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Build and Test ZEDIBackend
        run: |
          cd "ZEDI middleware/ZEDIBackend"
          dotnet restore
          dotnet build --no-restore
          dotnet test --no-build --verbosity normal

  # 3. Python (Azure Functions)
  build-test-functions:
    runs-on: ubuntu-latest
    needs: build-test-backend
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"

      - name: Build and Test ZEDIFunctions
        run: |
          cd ZEDIFunctions
          pip install -r requirements.txt
          python -m unittest discover


